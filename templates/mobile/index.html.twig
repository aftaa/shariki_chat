{% extends 'base.html.twig' %}

{% block title %}Чаты{% endblock %}

{% block body %}
    <style>
        body, input {
            font: 15px/20px Arial, sans-serif;
        }

        #status {
            float: left;
            width: 10px;
            height: 10px;
            display: block;
            background: red;
            margin-right: 10px;
            margin-top: 7px;
            border-radius: 10px;
        }

        #status.connected {
            background: lightgreen;
        }

        #work-mode {
            display: none;
            float: right;
        }

        .session {
            border: 1px solid gray;
            margin: 5px;
            padding: 5px;
            cursor: pointer;
            border-radius: 10px;
        }

        .archive {
            float: right;
            cursor: pointer;
        }

        .messages {
            border: 1px solid gray;
            border-radius: 10px;
            padding: 10px;
            overflow-y: scroll;
            height: 300px;
        }
        .message {
            clear: both;
            margin: 5px;
            float: left;
            max-width: 90%;
        }
        .operator {
            float: right;
        }
        .text {
            padding: 10px;
            background: #eee;
            border-radius: 10px;
        }
        .operator .text {
            background: #22ceb6;
            color: #fff;
        }
        .datetime {
            color: gray;
            font-size: 12px;
        }
        .form {
            margin: 5px 0;
        }
        header {
            overflow: hidden;
        }

        footer {
        }
    </style>

    <header>
        <div id="status"></div>
        <div>
            <select id="work-mode">
                <option>Бот</option>
                <option>Оператор</option>
            </select>
        </div>
    </header>

    <main>

    </main>

    <footer>
        <div class="session">
            <div class="archive">
                <img alt="Архивировать" src="/images/archive.png">
            </div>
            <div class="open">
                <div>Сообщений: <span class="message-count"></span></div>
                <div>Последнее: <span class="last-message"></span></div>
                <div>Чат начат: <span class="started"></span></div>
            </div>

            <div class="chat">
                <div class="messages">
                    <div class="message visitor">
                        <div class="datetime"></div>
                        <div class="text">Client message</div>
                    </div>
                    <div class="message operator">
                        <div class="datetime"></div>
                        <div class="text">Operator message</div>
                    </div>
                </div>
                <div class="form">
                    <input type="text">
                    <button>&gt;</button>
                </div>
            </div>
        </div>
    </footer>

    <script>
        let socket;
        let status = false;
    </script>

    {% if local %}
        <script>let url = 'ws://localhost:3001';</script>
    {% else %}
        <script>let url = 'wss://xn--e1aybc.xn--24-6kchemaby3a4d4erbe.xn--p1ai:3002';</script>
    {% endif %}

    <script>
        function command(command) {
            command = JSON.stringify(command);
            socket.send(command);
        }

        function connect() {
            socket = new WebSocket(url);
            socket.onopen = function () {
                setStatus(true);
                $('main').html('');
                command({ command: 'get_work_mode' });
                command({ command: 'get_sessions' });
            }
            socket.onmessage = function (event) {
                let message = JSON.parse(event.data);
                switch (message.command) {
                    case 'work_mode': setWorkMode(message.work_mode); break;
                    case 'session': drawSession(message.session); break;
                    case 'new_message': drawMessage(message); break;
                }
            }
            socket.onerror = function (event) {
                setStatus(false);
            }
            socket.onclose = function (event) {
                setStatus(false);
            }
        }

        connect();

        function setWorkMode(workMode) {
            let select = document.getElementById('work-mode');
            switch (workMode) {
                case 'bot': select.selectedIndex = 0; break;
                case 'operator': select.selectedIndex = 1;
            }
            $(select).show();
        }

        $('#work-mode').on('change', function () {
            let workMode;
            switch (this.selectedIndex) {
                case 0: workMode = 'bot'; break;
                case 1: workMode = 'operator';
            }
            command({
                command: 'set_work_mode',
                work_mode: workMode
            });
        })

        function setStatus(connected) {
            status = connected;
            if (connected) {
                $('#status').addClass('connected');
            } else {
                $('#status').removeClass('connected');
            }
        }

        setInterval(function () {
            if (!status) {
                connect();
            }
        }, 10000);

        function drawSession(session) {
            let $div = $('footer .session').clone(true, true);
            $div.attr('id', 'session-' + session.name);
            $('.open', $div).attr('data-session', session.name);
            $('.archive', $div).attr('data-session', session.name);
            $('.message-count', $div).html(session.message_count);
            $('.last-message', $div).html(session.last_message);
            $('.started', $div).html(session.started);
            $('.chat', $div).attr('id', 'chat-' + session.name).hide();
            $('.messages', $div).attr('id', 'messages-' + session.name).html('');
            $('main').append($div);
        }

        $('.archive').on('click', function (event) {
        })

        $('.session .open').on('click', function () {
            command({
                command: 'get_op_history',
                session: this.dataset.session
            });
            $('.chat').hide();
            $('#chat-' + this.dataset.session).show();
        })

        function drawMessage(message) {
            let $messages = $('#messages-' + message.session);
            let $message = $('footer ' + (message.isOperator ? '.operator' : '.visitor')).clone();
            $('.text', $message).html(message.message);
            $('.datetime', $message).html(message.created);
            $messages.append($message);
            scrollToBottom(message.session)
        }

        function scrollToBottom(session) {
            let chatMessages = document.getElementById("messages-" + session);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        let width = $('.messages').width();
        $('.form input').width(width - 42);
    </script>
{% endblock %}
