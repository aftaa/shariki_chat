{% extends 'base.html.twig' %}

{% block title %}Чаты{% endblock %}

{% block body %}
    <link rel="stylesheet" type="text/css" href="{{ asset('css/desktop.css') }}?t={{ 'now'|date('U') }}">

    <header>
        <div id="status">Не подключено</div>
        <div id="work-mode">
            <label for="work-mode-select">
                Режим работы:
            </label>
            <select id="work-mode-select">
                <option value="bot">Bot</option>
                <option value="operator">Operator</option>
            </select>
        </div>
        <div id="welcome-message">
            <label>
                Бот-приветствие в чате:
                <input type="text">
                <button>Сохранить</button>
            </label>
        </div>
        <div id="timeout-message">
            <label>
                Бот-сообщение в нерабочее время:
                <input type="text">
                <button>Сохранить</button>
            </label>
        </div>
    </header>

    <aside></aside>

    <main></main>

    <script>
        var socket;
    </script>

    {% if local %}
        <script>let socket_addr = 'ws://localhost:3001?operator=1';</script>
    {% else %}
        <script>let socket_addr = 'wss://xn--e1aybc.xn--24-6kchemaby3a4d4erbe.xn--p1ai:3002?operator=1';</script>
    {% endif %}

    <script>
        function connect() {
            socket = new WebSocket(socket_addr);
            socket.addEventListener("open", function () {
                $('#status').html("Подключено");
                let command = {
                    command: 'get_work_mode'
                };
                socket.send(JSON.stringify(command));

                command = {
                    command: 'get_welcome_message'
                };
                socket.send(JSON.stringify(command));

                command = {
                    command: 'get_timeout_message'
                };
                socket.send(JSON.stringify(command));
            });

            socket.addEventListener("message", function (e) {
                const message = JSON.parse(e.data);
                switch (message.command) {
                    case 'get_work_mode':
                        let work_mode = message.content.work_mode;
                        let select = document.getElementById('work-mode-select');
                        switch (work_mode) {
                            case 'bot':
                                select.selectedIndex = 0;
                                break;
                            default:
                                select.selectedIndex = 1;
                        }
                        break;
                    case 'get_welcome_message':
                        $('#welcome-message input').val(message.content.welcome_message);
                        break;
                    case 'get_timeout_message':
                        $('#timeout-message input').val(message.content.timeout_message);
                        break;
                }
            });

            socket.addEventListener("close", function () {
                $('#status').html("Не подключено");
            });
        }

        connect();

        setInterval(function () {
            let status = $('#status').html();
            if ('Не подключено' === status) {
                console.log('Подключаемся к серверу', socket_addr);
                connect();
            }
        }, 10000);

        $('#work-mode-select').on('change', function (event) {
            let work_mode = $('option:selected', this).val();
            let message = {
                command: 'Operator_Request_SetWorkMode',
                content: {
                    work_mode: work_mode
                }
            };
            message = JSON.stringify(message);
            socket.send(message);
        })

        $('#welcome-message button').on('click', function () {
            let welcome_message = $('#welcome-message input').val();
            let message = {
                command: 'Operator_Request_SetWelcomeMessage',
                content: {
                    welcome_message: welcome_message
                }
            };
            message = JSON.stringify(message);
            socket.send(message);
        })

        $('#timeout-message button').on('click', function () {
            let timeout_message = $('#timeout-message input').val();
            let message = {
                command: 'Operator_Request_SetTimeoutMessage',
                content: {
                    timeout_message: timeout_message
                }
            };
            message = JSON.stringify(message);
            socket.send(message);
        })
    </script>
{% endblock %}
